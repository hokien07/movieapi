<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Movie extends Model
{
    use HasFactory;
    protected $table = "movies";
    protected $fillable = [
        "server_id",
        "name",
        "origin_name",
        "slug",
        "description",
        "release_date",
        "type",
        "status",
        "thumb_url",
        "poster",
        "is_copyright",
        "sub_docquyen",
        "chieu_rap",
        "trailer_url",
        "time",
        "episode_current",
        "episode_total",
        "quality",
        "lang",
        "noty",
        "show_time",
        "year",
        "view",
        "active"
    ];

    public function actors () {
        return $this->belongsToMany(Actor::class, "actor_movie", 'movie_id', 'actor_id');
    }

    public function directors () {
        return $this->belongsToMany(Director::class, "director_movie", 'movie_id', 'director_id');
    }

    public function countries () {
        return $this->belongsToMany(Country::class, "country_movie", 'movie_id', 'country_id');
    }

    public function episodes () {
        return $this->belongsToMany(Episode::class, "movie_episode", 'movie_id', 'episode_id');
    }

    public function categories () {
        return $this->belongsToMany(Category::class, 'category_movie', 'movie_id', 'category_id');
    }

    public function scopeWithAll($query) {
        return $query->with('actors', 'directors', 'countries', 'episodes', 'categories');
    }

    protected static function booted()
    {
        parent::booted(); // TODO: Change the autogenerated stub
        static::creating(function ($item) {
            $item->created_at = now();
            $item->updated_at = now();
        });
        static::saving(function ($item) {
            $item->updated_at = now();
        });
    }
}
